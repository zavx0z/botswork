generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @db.Uuid
  createdAt DateTime @default(now())
  username  String   @unique @db.VarChar(50)
  email     String?  @unique @db.VarChar(320)
  password  String   @db.VarChar(1024)
  role      Role     @default(client)
  status    Status   @default(active)
  clients   Client[]

  @@map("user")
}

enum Status {
  active
  verified
  deleted

  @@map("status")
}

enum Role {
  client
  developer
  bot
  moderator
  admin
  superuser

  @@map("role")
}

model Device {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  family    String?
  brand     String?
  model     String?
  os        OS[]

  @@map("device")
}

model OS {
  id         Int       @id @default(autoincrement())
  createdAt  DateTime  @default(now())
  family     String?
  major      String?
  minor      String?
  patch      String?
  patchMinor String?
  device     Device    @relation(fields: [deviceId], references: [id])
  deviceId   Int
  browser    Browser[]

  @@map("os")
}

model Browser {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  family    String?
  major     String?
  minor     String?
  patch     String?
  os        OS       @relation(fields: [osId], references: [id])
  osId      Int
  clients   Client[]

  @@map("browser")
}

model Client {
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.Uuid
  browser   Browser  @relation(fields: [browserId], references: [id])
  browserId Int      @unique

  @@id([userId, browserId])
  @@map("client")
}
